class NovaJsMinService{constructor(){}get getArgs(){var mangle=nova.config.get("VineCode.NovaJsMin.mangle"),sourceMap=nova.config.get("VineCode.NovaJsMin.sourceMap"),execPath=nova.config.get("VineCode.NovaJsMin.execPath");execPath||(execPath="uglifyjs");var options=[];return options.push(execPath),options.push("--compress"),"Yes"==mangle&&options.push("-m"),"Yes"==sourceMap&&options.push("--source-map"),options}minifyJsFile(source){if("js"==source.substr(-2)&&"min.js"!=source.substr(-6)){var target=source.replace(".js",".min.js"),args=this.getArgs;args.push("--output"),args.push(target),args.push("--"),args.push(source);var options={args:args};console.log(args.join(" "));var process=new Process("/usr/bin/env",options),stdOut=new Array;process.onStdout(function(line){stdOut.push(line.trim())});var stdErr=new Array;process.onStderr(function(line){stdErr.push(line.trim())}),process.onDidExit(function(){if(stdErr.length>0){nova._notificationTimer&&clearTimeout(nova._notificationTimer);var message=stdErr.splice(0,2).join("\n");let request=new NotificationRequest("js-error");request.title=nova.localize("Javascript Compile Error"),request.body=nova.localize(message),request.actions=[nova.localize("Dismiss")];nova.notifications.add(request);nova._notificationTimer=setTimeout(function(){nova.notifications.cancel("js-error")},1e4)}else nova.notifications.cancel("js-error")}),process.start()}}minifyJsFileOnSave(editor){var source=editor.document.path;"No"!=nova.config.get("VineCode.NovaJsMin.minifyOnSave")&&"js"==source.substr(-2)&&"min.js"!=source.substr(-6)&&this.minifyJsFile(source)}minifyJsFileOnCommand(editor){var source=editor.document.path;if("js"==source.substr(-2)&&"min.js"!=source.substr(-6)){if(console.log("minifyJsFileOnCommand"),editor.document.isDirty)return console.log("Saving Changes"),void editor.save();"No"!=nova.config.get("VineCode.NovaJsMin.minifyOnSave")&&this.minifyJsFile(source)}}beautifyJsFileOnCommand(editor){var source=editor.document.path;if("js"==source.slice(2+(source.lastIndexOf(".")-1>>>0))){console.log("beautifyJsFile"),editor.document.isDirty&&(console.log("Saving Changes"),editor.save());var execPath=nova.config.get("VineCode.NovaJsMin.execPath");execPath||(execPath="uglifyjs");var args=new Array;args.push(execPath),args.push("--beautify"),args.push("--comments"),args.push("all"),args.push("--output"),args.push(source),args.push("--"),args.push(source),console.log(args.join(" "));var options={args:args};console.log(args.join(" "));var process=new Process("/usr/bin/env",options),stdOut=new Array;process.onStdout(function(line){stdOut.push(line.trim())});var stdErr=new Array;process.onStderr(function(line){stdErr.push(line.trim())}),process.onDidExit(function(){if(console.log("stdOut: "+stdOut.join("\n")),console.log("stdErr: "+stdErr.join("\n")),stdErr.length>0){nova._notificationTimer&&clearTimeout(nova._notificationTimer);var message=stdErr.splice(0,2).join("\n");let request=new NotificationRequest("invalid-file");request.title=nova.localize(" Compile Error"),request.body=nova.localize(message),request.actions=[nova.localize("Dismiss")];nova.notifications.add(request);nova._notificationTimer=setTimeout(function(){nova.notifications.cancel("sass-error")},1e4)}else nova.notifications.cancel("sass-error")}),process.start(),console.log("DO: beautifyJsFile")}}}module.exports=NovaJsMinService;